{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.11","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":12192146,"sourceType":"datasetVersion","datasetId":7679585}],"dockerImageVersionId":31040,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, classification_report\nfrom catboost import CatBoostClassifier\nimport warnings\n\nwarnings.filterwarnings('ignore')\n\n# Fungsi evaluasi\ndef evaluate_model(model, X_test, y_test, model_name=\"\"):\n    y_pred = model.predict(X_test)\n    accuracy = accuracy_score(y_test, y_pred)\n    precision = precision_score(y_test, y_pred)\n    recall = recall_score(y_test, y_pred)\n    f1 = f1_score(y_test, y_pred)\n    print(f\"========= HASIL EVALUASI: {model_name} =========\\n\")\n    print(f\"Akurasi   : {accuracy:.4f}\")\n    print(f\"Presisi   : {precision:.4f}\")\n    print(f\"Recall    : {recall:.4f}\")\n    print(f\"F1-Score  : {f1:.4f}\\n\")\n    print(\"Laporan Klasifikasi Lengkap:\")\n    print(classification_report(y_test, y_pred))\n    return {'Akurasi': accuracy, 'Presisi': precision, 'Recall': recall, 'F1-Score': f1}\n\nprint(\"âœ… Library dan fungsi bantuan siap digunakan.\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-17T11:02:54.244064Z","iopub.execute_input":"2025-06-17T11:02:54.244683Z","iopub.status.idle":"2025-06-17T11:02:54.254200Z","shell.execute_reply.started":"2025-06-17T11:02:54.244641Z","shell.execute_reply":"2025-06-17T11:02:54.253371Z"}},"outputs":[{"name":"stdout","text":"âœ… Library dan fungsi bantuan siap digunakan.\n","output_type":"stream"}],"execution_count":11},{"cell_type":"code","source":"# Muat dataset Anda\ndf = pd.read_csv('/kaggle/input/fp-mlcatboostdataset/cluster1_standardscaler (1).csv')\n\n# 1. Tentukan X dan y (TARGETNYA ADALAH 'cluster')\nX = df.drop('cluster', axis=1)\ny = df['cluster']\n\n# 2. Bagi data SATU KALI SAJA untuk kedua skenario\nX_train, X_test, y_train, y_test = train_test_split(\n    X, y, test_size=0.2, stratify=y, random_state=42\n)\n\nprint(\"âœ… Data berhasil dimuat dan dibagi. Target prediksi adalah 'cluster'.\")\nprint(f\"Kolom Fitur (X): {X.columns.to_list()}\")\nprint(f\"Ukuran X_train: {X_train.shape}\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-17T11:02:54.256287Z","iopub.execute_input":"2025-06-17T11:02:54.256788Z","iopub.status.idle":"2025-06-17T11:02:54.586865Z","shell.execute_reply.started":"2025-06-17T11:02:54.256754Z","shell.execute_reply":"2025-06-17T11:02:54.585491Z"}},"outputs":[{"name":"stdout","text":"âœ… Data berhasil dimuat dan dibagi. Target prediksi adalah 'cluster'.\nKolom Fitur (X): ['general_health', 'checkup', 'exercise', 'heart_disease', 'skin_cancer', 'other_cancer', 'depression', 'diabetes', 'arthritis', 'age_category', 'height_cm', 'weight_kg', 'bmi', 'smoking_history', 'alcohol_consumption', 'fruit_consumption', 'green_vegetables_consumption', 'friedpotato_consumption', 'sex_Male']\nUkuran X_train: (79975, 19)\n","output_type":"stream"}],"execution_count":12},{"cell_type":"code","source":"print(\"--- Memulai Skenario A: Tanpa Scaling Tambahan ---\")\n\n# 1. Inisialisasi Model\nmodel_tanpa_scaling = CatBoostClassifier(iterations=1000, learning_rate=0.05, depth=6, verbose=0, random_state=42)\n\n# 2. Latih Model\nmodel_tanpa_scaling.fit(X_train, y_train)\n\n# 3. Evaluasi Model\nmetrics_a = evaluate_model(model_tanpa_scaling, X_test, y_test, \"Tanpa Scaling Tambahan\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-17T11:02:54.587942Z","iopub.execute_input":"2025-06-17T11:02:54.588231Z","iopub.status.idle":"2025-06-17T11:03:14.245849Z","shell.execute_reply.started":"2025-06-17T11:02:54.588209Z","shell.execute_reply":"2025-06-17T11:03:14.244465Z"}},"outputs":[{"name":"stdout","text":"--- Memulai Skenario A: Tanpa Scaling Tambahan ---\n========= HASIL EVALUASI: Tanpa Scaling Tambahan =========\n\nAkurasi   : 0.9945\nPresisi   : 0.9941\nRecall    : 0.9920\nF1-Score  : 0.9931\n\nLaporan Klasifikasi Lengkap:\n              precision    recall  f1-score   support\n\n           0       0.99      1.00      1.00     12138\n           1       0.99      0.99      0.99      7856\n\n    accuracy                           0.99     19994\n   macro avg       0.99      0.99      0.99     19994\nweighted avg       0.99      0.99      0.99     19994\n\n","output_type":"stream"}],"execution_count":13},{"cell_type":"code","source":"print(\"--- Memulai Skenario B: Dengan Scaling Ulang ---\")\n\n# 1. Buat dan terapkan Scaler\nscaler = StandardScaler()\nX_train_scaled = scaler.fit_transform(X_train)\nX_test_scaled = scaler.transform(X_test)\n\nprint(\"âœ… Data telah di-scaling ulang menggunakan StandardScaler.\")\n\n# 2. Inisialisasi Model\nmodel_dengan_scaling = CatBoostClassifier(iterations=1000, learning_rate=0.05, depth=6, verbose=0, random_state=42)\n\n# 3. Latih Model\nmodel_dengan_scaling.fit(X_train_scaled, y_train)\n\n# 4. Evaluasi Model\nmetrics_b = evaluate_model(model_dengan_scaling, X_test_scaled, y_test, \"Dengan Scaling Ulang\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-17T11:03:14.247028Z","iopub.execute_input":"2025-06-17T11:03:14.247346Z","iopub.status.idle":"2025-06-17T11:03:33.684944Z","shell.execute_reply.started":"2025-06-17T11:03:14.247323Z","shell.execute_reply":"2025-06-17T11:03:33.683141Z"}},"outputs":[{"name":"stdout","text":"--- Memulai Skenario B: Dengan Scaling Ulang ---\nâœ… Data telah di-scaling ulang menggunakan StandardScaler.\n========= HASIL EVALUASI: Dengan Scaling Ulang =========\n\nAkurasi   : 0.9945\nPresisi   : 0.9941\nRecall    : 0.9920\nF1-Score  : 0.9931\n\nLaporan Klasifikasi Lengkap:\n              precision    recall  f1-score   support\n\n           0       0.99      1.00      1.00     12138\n           1       0.99      0.99      0.99      7856\n\n    accuracy                           0.99     19994\n   macro avg       0.99      0.99      0.99     19994\nweighted avg       0.99      0.99      0.99     19994\n\n","output_type":"stream"}],"execution_count":14},{"cell_type":"code","source":"# Buat DataFrame perbandingan dari hasil metrik\ncomparison_df = pd.DataFrame({\n    'Tanpa Scaling Tambahan (A)': metrics_a,\n    'Dengan Scaling Ulang (B)': metrics_b\n}).T\n\nprint(\"ðŸ“Œ Ringkasan Perbandingan Akhir (Target: Cluster):\")\ndisplay(comparison_df.style.highlight_max(color='#aaffaa', axis=0).format(\"{:.4f}\"))","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-06-17T11:03:33.688338Z","iopub.execute_input":"2025-06-17T11:03:33.690179Z","iopub.status.idle":"2025-06-17T11:03:33.712346Z","shell.execute_reply.started":"2025-06-17T11:03:33.690132Z","shell.execute_reply":"2025-06-17T11:03:33.709116Z"}},"outputs":[{"name":"stdout","text":"ðŸ“Œ Ringkasan Perbandingan Akhir (Target: Cluster):\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<pandas.io.formats.style.Styler at 0x7df7bbf1a7d0>","text/html":"<style type=\"text/css\">\n#T_a9cb1_row0_col0, #T_a9cb1_row0_col1, #T_a9cb1_row0_col2, #T_a9cb1_row0_col3, #T_a9cb1_row1_col0, #T_a9cb1_row1_col1, #T_a9cb1_row1_col2, #T_a9cb1_row1_col3 {\n  background-color: #aaffaa;\n}\n</style>\n<table id=\"T_a9cb1\">\n  <thead>\n    <tr>\n      <th class=\"blank level0\" >&nbsp;</th>\n      <th id=\"T_a9cb1_level0_col0\" class=\"col_heading level0 col0\" >Akurasi</th>\n      <th id=\"T_a9cb1_level0_col1\" class=\"col_heading level0 col1\" >Presisi</th>\n      <th id=\"T_a9cb1_level0_col2\" class=\"col_heading level0 col2\" >Recall</th>\n      <th id=\"T_a9cb1_level0_col3\" class=\"col_heading level0 col3\" >F1-Score</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th id=\"T_a9cb1_level0_row0\" class=\"row_heading level0 row0\" >Tanpa Scaling Tambahan (A)</th>\n      <td id=\"T_a9cb1_row0_col0\" class=\"data row0 col0\" >0.9945</td>\n      <td id=\"T_a9cb1_row0_col1\" class=\"data row0 col1\" >0.9941</td>\n      <td id=\"T_a9cb1_row0_col2\" class=\"data row0 col2\" >0.9920</td>\n      <td id=\"T_a9cb1_row0_col3\" class=\"data row0 col3\" >0.9931</td>\n    </tr>\n    <tr>\n      <th id=\"T_a9cb1_level0_row1\" class=\"row_heading level0 row1\" >Dengan Scaling Ulang (B)</th>\n      <td id=\"T_a9cb1_row1_col0\" class=\"data row1 col0\" >0.9945</td>\n      <td id=\"T_a9cb1_row1_col1\" class=\"data row1 col1\" >0.9941</td>\n      <td id=\"T_a9cb1_row1_col2\" class=\"data row1 col2\" >0.9920</td>\n      <td id=\"T_a9cb1_row1_col3\" class=\"data row1 col3\" >0.9931</td>\n    </tr>\n  </tbody>\n</table>\n"},"metadata":{}}],"execution_count":15}]}